@page "/"
@using HotelPriceScout.Data.Interface
@using DataAccessLibrary
@inject Dashboard Dashboard
@inject SqliteDataAccess _db

<div class="row col-md-7">
    <h1>@Cal.monthName @Cal.year</h1>
    @if (Cal.monthsAway > 0)
    {
        <button type="button" class="btn btn-default btn-lg" @onclick="() => { Cal.monthsAway--; Cal.CreateMonth(); }">
            <i class="bi bi-arrow-thick-left"></i>
            <span class="oi oi-arrow-thick-left"></span>
        </button>
    }
    else
    {
        <button id="BtnDisable" type="button" class="btn btn-default btn-lg" disabled>
            <i class="bi bi-arrow-thick-left"></i>
            <span class="oi oi-arrow-thick-left"></span>
        </button>
    }
    @if (Cal.monthsAway < 4)
    {
        <button type="button" class="btn btn-default btn-lg" @onclick="() => { Cal.monthsAway++; Cal.CreateMonth(); }">
            <i class="bi bi-arrow-thick-right"></i>
            <span class="oi oi-arrow-thick-right"></span>
        </button>
    }
    else
    {
        <button id="BtnDisable" type="button" class="btn btn-default btn-lg" disabled>
            <span class="oi oi-arrow-thick-right"></span>
        </button>
    }
</div>

<div class="row col-md-7">
    <div class="col-md-4">
        <SfDropDownList Width="200px" TItem="numberOfAdults" TValue="int" @bind-value="AdultsPicked" DataSource="@Adults">
            <DropDownListFieldSettings Text="Text" Value="Adults"></DropDownListFieldSettings>
        </SfDropDownList>
        </div>

        <div class="col-md-5">
            <SfDropDownList TItem="string" TValue="IEnumerable<string>" DataSource="listOfHotels" Placeholder="Select hotels">
                <DropDownListFieldSettings>
                </DropDownListFieldSettings>
            </SfDropDownList>
        </div>
    </div>

    <div class="row">
        <div class="col-md-7">
            <table class="table table-bordered col">
                <thead>
                    <tr>
                        <th> Monday</th>
                        <th> Tuesday</th>
                        <th> Wednesday</th>
                        <th> Thursday</th>
                        <th> Friday</th>
                        <th> Saturday</th>
                        <th> Sunday</th>

                    </tr>
                </thead>
                <tbody>
                    <tr>
                        @for (int i = 0; i < Cal.numDummyColumn - 1; i++)
                        {
                            <td></td>
                        }
                        @for (int i = 1; i + Cal.numDummyColumn - 1 <= 7; i++)
                        {
                            int k = i;
                            <td @onclick="(()=>Cal.ShowMoreInfo(k))">
                                <div style="font-size: large;">@i</div>
                                <div style="text-align: right; font-size: small;">You 1337</div>
                                <div style="text-align: right; font-size: small; opacity: 0.5;">Market 666</div>
                            </td>
                        }
                    </tr>

                    @for (int i = 8 - Cal.numDummyColumn + 1; i <= Cal.monthEnd.Day; i += 7)
                    {
                        <tr class="clik">
                            @for (int j = 0; j < 7; j++)
                            {
                                @if (i + j <= Cal.monthEnd.Day)
                                {
                                    int k = i + j;
                                    <td @onclick="(()=>Cal.ShowMoreInfo(k))">
                                        <div style="font-size: large;">@(i + j)</div>
                                        <div style="text-align: right; font-size: small;">You 1337</div>
                                        <div style="text-align: right; font-size: small; opacity: 0.5;">Market 666</div>
                                    </td>
                                }
                                else
                                {
                                    <td></td>
                                }
                            }
                        </tr>
                    }
                </tbody>
            </table>
        </div>

        @if (Cal.DayClicked != 0)
        {
            <div class="col-md-5 border">
                <div class="row col"> <!-- outer layer-->
        @if(priceList == null){<div><p>Loading data</p> </div>}// <--- checks if thermometer is ready yet
        else
             {
            <table class="table table-borderless">
                @foreach (Prices item in priceList)
                {
                
                         if (item.Price > MarketPriceItem.Price) 
                         {
                             <tr><td class="col text-center">@item.Name<span class="oi oi-arrow-right text-center"></span></td> 
                             <td class="@(priceList.First()==item ? "table-danger rounded-top":"table-danger")">@item.Price,-</td></tr>
                         } 

                         else if (item.Price < MarketPriceItem.Price)
                         {
                             <tr><td class="col text-center">@item.Name<span class="oi oi-arrow-right text-center"></span></td>
                             <td class="@(priceList.Last()==item ? "table-success rounded-bottom":"table-success")">@item.Price,-</td></tr>
                         }

                         else 
                         {
                             <tr><td class="col text-center"> @MarketPriceItem.Name<span class="oi oi-arrow-right text-center"></span></td>
                             <td class="table-info">@MarketPriceItem.Price,-</td> </tr>
                         }
                 }      
               </table>
            }
                </div>
  
                <div>Date: @Cal.DayClicked</div>
            </div>
        }
    </div>

    @code {
        public int AdultsPicked = 1;
        public class numberOfAdults
        {
            public int Adults { get; set; }
            public string Text { get; set; }
        }
        public List<numberOfAdults> Adults = new List<numberOfAdults>()
        {
            new numberOfAdults(){ Adults= 1, Text= "1 adult" },
            new numberOfAdults(){ Adults= 2, Text= "2 adults" },
            new numberOfAdults(){ Adults= 3, Text= "4 adults" },
        };

        Dashboard Cal = new Dashboard();
        IEnumerable<string> listOfHotels = Enumerable.Empty<string>();

        List<Prices> priceList;
        Prices MarketPriceItem;
        private void GenerateThermometer()
        {
            priceList =  PriceMeterGenerator.PriceListGenerator(); // This needs to get its data from the database, as a list of Price objects
            MarketPriceItem =  (PriceMeterGenerator.MarketFinder(priceList));
            priceList.Sort();
        }

        protected override async Task OnInitializedAsync()
        {
            GenerateThermometer();
            listOfHotels = await _db.LoadStaticHotelResources("total");
            Cal.CreateMonth();
        }
    }
