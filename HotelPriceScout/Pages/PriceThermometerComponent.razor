@page "/PriceThermometer"
<h3>Price thermometer</h3>

<div class="row border col-md-4"> <!-- outer layer-->
    @if(List == null){<div><p>Loading data</p> </div>}// <--- checks if thermometer is ready yet
    else
        {
        <table class="table table-borderless">
            @foreach (Prices item in List)
            {
                if (designInt == 1) // checks if row is the first row 
                {
                    <tr > <td class="col text-center">@item.Name<span class="oi oi-arrow-right text-center"></span></td> <td class="table-danger rounded-top">@item.Price,-</td> </tr>; designInt++;
                }
                else if (designInt == List.Count) // checks if row is the last row 
                {
                    <tr> <td class="col text-center">@item.Name<span class="oi oi-arrow-right text-center"></span></td> <td class="table-success rounded-bottom">@item.Price,-</td> </tr>;
                }
                else
                {
                     if (item.Price > MarketPriceItem.Price) 
                     {<tr > <td class="col text-center">@item.Name<span class="oi oi-arrow-right text-center"></span></td> <td class="table-danger">@item.Price,-</td> </tr>; designInt++;} 

                     else if (item.Price < MarketPriceItem.Price)
                     {<tr> <td class="col text-center">@item.Name<span class="oi oi-arrow-right text-center"></span></td> <td class="table-success">@item.Price,-</td> </tr>; designInt++;}

                     else 
                     {<tr> <td class="col text-center"> @MarketPriceItem.Name<span class="oi oi-arrow-right text-center"></span></td> <td class="table-info">@MarketPriceItem.Price,-</td> </tr>; designInt++;}
                }

                            
             }      
        </table>
        }
 </div>
  

@code 
{   int designInt = 1;
     protected override void OnInitialized() 
    { GenerateThermometer(); } // runs the code required to load the thermometer when the page is loaded.

    List<Prices> List;
    Prices MarketPriceItem;
    private void GenerateThermometer()
    {
        List =  PriceMeterGenerator.PriceListGenerator(); // generates test list of hotelprices, where market price is inside.
        MarketPriceItem =  (PriceMeterGenerator.MarketFinder(List)); // extracts marketprice from list of prices.
        //Test.Remove(MarketPriceItem);  // removes market object from list as it has been extracted.
        List.Sort();
    }
 }