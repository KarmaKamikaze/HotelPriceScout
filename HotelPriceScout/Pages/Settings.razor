@page "/settings"



<h1>Settings</h1>
<br />

<label>Margin value</label>
<br />
<SfNumericTextBox Width="300px" Placeholder="Insert margin value %" TValue="int?" Step="1" Max="100" Min="1" Value="5"></SfNumericTextBox>
<br />&nbsp;
<br />
<br />&nbsp;
<br />

<label>Amount of notifications</label><br />
<SfDropDownList Width="300px" TItem="NotificationAmount" TValue="int" DataSource="@Notifications">
    <DropDownListFieldSettings Text="Text" Value="Notification"></DropDownListFieldSettings>
</SfDropDownList>
<br />&nbsp;
<br />
<br />&nbsp;
<br />

<label>Notification time</label>
<br />
<SfTimePicker Width="300px" TValue="DateTime?" Value="@TimeValue" Step=60 Format="HH:mm" CssClass="e-small"></SfTimePicker>
<br />&nbsp;
<br />
<br />&nbsp;
<br />

@if (notificationpopup2)
{
    <label>Notification time 2</label>
    <br />
    <SfTimePicker Width="300px" TValue="DateTime?" Value="@TimeValue2" Step=60 Format="HH:mm"></SfTimePicker>
}

@if (notificationpopup3)
{
    <label>Notification time 2</label>
    <br />
    <SfTimePicker Width="300px" TValue="DateTime?" Value="@TimeValue2" Step=60 Format="HH:mm"></SfTimePicker>

    <label>Notification time 3</label>
    <br />
    <SfTimePicker Width="300px" TValue="DateTime?" Value="@TimeValue3" Step=60 Format="HH:mm"></SfTimePicker>

}


<div class="row">
    @if (showstart)
    {
        <button type="button" class="border border-dark col-md-1 btn btn-success" disabled=@IsScoutStarted @onclick="StartProgram"> Start program</button>
    }

    @if (showstop)
    {
        <button type="button" class="border border-dark col-md-1 btn btn-danger" data-bs-toggle="modal" @onkeydown="@EscapeStop" @onclick="PopUp"> Stop program</button>
    }
    @if (popup)
    {
        <div class="modal fade show d-block" id="Modal" tabindex="-1" role="dialog">
            <div class="modal-dialog modal-dialog-centered" role="document">
                <div class="modal-content">
                    <div class="modal-header">
                        <h5 class="modal-title" id="titleLabel">Are you sure you want to stop the program?</h5>
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="form-control border border-dark" disabled=@IsScoutStopped @onclick="StopProgram">Yes </button>
                        <button type="button" class="form-control border border-dark" disabled=@IsScoutStopped @onclick="PopUp"> No </button>
                    </div>
                </div>
            </div>
        </div>
    }

    <div class="col-md-1">
    </div>
    @if (showupdate)
    {
        <button type="button" class="border border-dark col-md-1 btn btn-primary" data-bs-toggle="modal" @onkeydown="@EscapeUpdate" @onclick="UpdatePopUp">Update program</button>
    }
    @if (updatepopup)
    {
        <div class="modal fade show d-block" id="Modal" tabindex="-1" role="dialog">
            <div class="modal-dialog modal-dialog-centered" role="document">
                <div class="modal-content">
                    <div class="modal-header">
                        <h5 class="modal-title" id="titleLabel">Are you sure you want to update the program?</h5>
                    </div>
                    <div class=modal-footer>
                        <button type="button" class="form-control border border-dark" col-8 col-sm-3 disabled=@IsScoutUpdated @onclick="UpdateProgram">Yes</button>
                        <button type="button" class="form-control border border-dark" col-4 col-sm-3 disabled=@IsScoutUpdated @onclick="UpdatePopUp">No</button>
                    </div>
                </div>
            </div>
        </div>
    }
    <div class=col-md-3>
    </div>
</div>





@code {

    public class NotificationAmount
    {
        public int Notification { get; set; }
        public string Text { get; set; }
    }
    public List<NotificationAmount> Notifications = new List<NotificationAmount>()
    {
        new NotificationAmount(){ Notification= 1, Text= "1" },
        new NotificationAmount(){ Notification= 2, Text= "2" },
        new NotificationAmount(){ Notification= 3, Text= "3" },
    };

    private void NotificationsAmount(int Notification)
    {
        if (Notification == 2)
        {
            NotificationDropdown2();
        }
        else if (Notification == 3)
        {
            NotificationDropdown3();
        }
    }
    
    public bool notificationpopup2 = false;
    private void NotificationDropdown2()
    {
        notificationpopup2 = !notificationpopup2;
    }

    public bool notificationpopup3 = false;
    private void NotificationDropdown3()
    {
        notificationpopup3 = !notificationpopup3;
    }
    public DateTime TimeValue { get; set; } = DateTime.Now;
    public DateTime TimeValue2 { get; set; } = DateTime.Now;
    public DateTime TimeValue3 { get; set; } = DateTime.Now;


    bool IsScoutStopped = false;
    bool IsScoutUpdated = false;
    bool IsScoutStarted = false;


    public void StopProgram()
    {
        IsScoutStopped = true;
        ShowStartButton();
        ShowStopButton();
        ShowUpdateButton();
        PopUp();
        IsScoutStarted = false;
        StateHasChanged();

    }


    async void UpdateProgram()
    {
        IsScoutUpdated = true;
        await OnButtonClick();
        UpdatePopUp();
        IsScoutUpdated = false;
        StateHasChanged();
    }


    public void StartProgram()
    {
        IsScoutStarted = true;
        ShowStopButton();
        ShowUpdateButton();
        ShowStartButton();
        IsScoutStopped = false;
        StateHasChanged();

    }


    Task OnButtonClick()
    {

        return Task.Delay(1000);
    }


    private bool showstop = false;
    private void ShowStopButton()
    {
        showstop = !showstop;
    }

    private bool showstart = true;
    private void ShowStartButton()
    {
        showstart = !showstart;
    }

    private bool showupdate = false;
    private void ShowUpdateButton()
    {
        showupdate = !showupdate;
    }


    public bool popup = false;
    private void PopUp()
    {
        popup = !popup;
    }

    public bool updatepopup = false;
    private void UpdatePopUp()
    {
        updatepopup = !updatepopup;
    }


    public void EscapeUpdate(KeyboardEventArgs e)
    {
        if (e.Code == "Escape")
        {
            UpdatePopUp();
        }
    }

    public void EscapeStop(KeyboardEventArgs f)
    {
        if (f.Code == "Escape")
        {
            PopUp();
        }
    }

}