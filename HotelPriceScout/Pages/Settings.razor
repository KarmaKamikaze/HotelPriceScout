@page "/Settings"
@using HotelPriceScout.Data.Interface
@using HotelPriceScout.Data.Model
@inherits SettingsManager
@inject ScoutSharedService _scoutService

<div class="row"><div class="col-4 offset-4 border border-5 border-warning">
<div class="text-center col"><h1 class="">Settings</h1></div>

<div class="text-center col"><label>Margin value percent</label></div>

<div class="text-center col"><SfNumericTextBox  TValue="int" Step="1" Max="100" Min="1" @bind-Value="marginPicked"></SfNumericTextBox></div>


<div class="text-center col"><label>Amount of notifications</label></div>
<div class="text-center col"><SfDropDownList  TItem="NotificationAmount" TValue="int" @bind-value="notificationAmountPicked" DataSource="@Notifications">
    <DropDownListFieldSettings Text="Text" Value="Notification"></DropDownListFieldSettings>
</SfDropDownList></div>



<div class="text-center col"><label>Notification time(s)</label></div>

<div class="text-center col"><SfTimePicker  TValue="DateTime "@bind-Value="@timeValue" Step=30 Format="HH:mm"></SfTimePicker></div>


@if (notificationAmountPicked == 2)
{
    <div class="text-center c"><SfTimePicker  TValue="DateTime" @bind-Value="@timeValue2" Step=30 Format="HH:mm"></SfTimePicker></div>
}

@if (notificationAmountPicked == 3)
{
   <div class="text-center col"> <SfTimePicker  TValue="DateTime" @bind-Value="@timeValue2" Step=30 Format="HH:mm"></SfTimePicker></div>
    <div class="text-center col"><SfTimePicker  TValue="DateTime" @bind-Value="@timeValue3" Step=60 Format="HH:mm"></SfTimePicker></div>
}


    <div class="text-center col">
        @if (showStart)
        {
            <div class="col"><button type="button" class="border border-dark btn btn-success" disabled=@isScoutStarted @onclick="StartProgram"> Start program</button></div>
        }
        @if (modalStart)
        {
            <div class="modal fade show d-block" id="Modal" tabindex="-1" role="dialog">
                <div class="modal-dialog modal-dialog-centered" role="document">
                    <div class="modal-content">
                        <div class="modal-body">
                            <h4 class="modal-title" id="titleLabel">Settings have been set and the program has started!</h4>
                        </div>
                    </div>
                </div>
            </div>
        }
        </div>
        
        @if (showStop)
        {
            <div class="row">
                <button type="button" class="border border-dark btn btn-danger col" data-bs-toggle="modal" @onkeydown="@EscapeStop" @onclick="PopUp"> Stop program</button>
                <button type="button" class="border border-dark btn btn-primary col" data-bs-toggle="modal" @onkeydown="@EscapeUpdate" @onclick="UpdatePopUp">Update program</button>
            </div>
        }
        @if (popUp)
        {
            <div class="modal fade show d-block" id="Modal" tabindex="-1" role="dialog">
                <div class="modal-dialog modal-dialog-centered" role="document">
                    <div class="modal-content">
                        <div class="modal-header">
                            <h5 class="modal-title" id="titleLabel">Are you sure you want to stop the program?</h5>
                        </div>
                        <div class="modal-footer">
                            <button type="button" class="form-control border border-dark" disabled=@isScoutStopped @onclick="StopProgram">Yes </button>
                            <button type="button" class="form-control border border-dark" disabled=@isScoutStopped @onclick="PopUp"> No </button>
                        </div>
                    </div>
                </div>
            </div>
        }

        
      
        @if (updatePopUp)
        {
            <div class="modal fade show d-block" id="Modal" tabindex="-1" role="dialog">
                <div class="modal-dialog modal-dialog-centered" role="document">
                    <div class="modal-content">
                        <div class="modal-header">
                            <h5 class="modal-title" id="titleLabel">Are you sure you want to update the program?</h5>
                        </div>
                        <div class=modal-footer>
                            <button type="button" class="form-control border border-dark" disabled=@isScoutUpdated @onclick="UpdateProgram">Yes</button>
                            <button type="button" class="form-control border border-dark" disabled=@isScoutUpdated @onclick="UpdatePopUp">No</button>
                        </div>
                    </div>
                </div>
            </div>
        }
        @if (updateYes)
        {
            <div class="modal fade show d-block" id="Modal" tabindex="-1" role="dialog">
                <div class="modal-dialog modal-dialog-centered" role="document">
                    <div class="modal-content">
                        <div class="modal-body">
                            <h2 class="modal-title" id="titleLabel">The program has been updated!</h2>
                        </div>
                    </div>
                </div>
            </div>
        }
    </div>
</div>


@code {

    public class NotificationAmount
    {
        public int Notification { get; set; }
        public string Text { get; set; }
    }
    public List<NotificationAmount> Notifications = new List<NotificationAmount>()
    {
        new NotificationAmount(){ Notification= 0, Text= "0" },
        new NotificationAmount(){ Notification= 1, Text= "1" },
        new NotificationAmount(){ Notification= 2, Text= "2" },
        new NotificationAmount(){ Notification= 3, Text= "3" },
    };

    public void StopProgram()
    {
        isScoutStopped = true;
        _scoutService.ScoutRunning = false;
        ShowStartButton();
        ShowStopButton();
        ShowUpdateButton();
        PopUp();
        marginPickedPass = default;
        notificationPickedPass = default;
        timeValuePass = default;
        timeValuePass2 = default;
        timeValuePass3 = default;
        isScoutStarted = false;
        marginPicked = 1;
        notificationAmountPicked = 1;
        _scoutService.Scout.StopScout();
        StateHasChanged();
    }


    async void UpdateProgram()
    {
        isScoutUpdated = true;
        await OnButtonClick();
        updateYes = true;
        UpdatePopUp();
        StateHasChanged();
        marginPickedPass = marginPicked;
        notificationPickedPass = notificationAmountPicked;
        timeValuePass = timeValue;
        timeValuePass2 = timeValue2;
        timeValuePass3 = timeValue3;
        isScoutUpdated = false;
        await Task.Delay(1500);
        updateYes = false;
        StateHasChanged();
    }

    public async void StartProgram()
    {
        _scoutService.ScoutRunning = true;
        marginPickedPass = marginPicked;
        notificationPickedPass = notificationAmountPicked;
        timeValuePass = timeValue;
        timeValuePass2 = timeValue2;
        timeValuePass3 = timeValue3;
        modalStart = true;
        isScoutStarted = true;
        ShowStopButton();
        ShowUpdateButton();
        ShowStartButton();
        isScoutStopped = false;
        await Task.Delay(2000);
        modalStart = false;
        _scoutService.Scout = await Scout.CreateScoutAsync(marginPickedPass, GetNotificationTimes());
        _scoutService.Scout.StartScout();
        StateHasChanged();
    }

    Task OnButtonClick()
    {
        return Task.Delay(1000);
    }


    public void EscapeUpdate(KeyboardEventArgs e)
    {
        if (e.Code == "Escape")
        {
            UpdatePopUp();
        }
    }

    public void EscapeStop(KeyboardEventArgs f)
    {
        if (f.Code == "Escape")
        {
            PopUp();
        }
    }
}